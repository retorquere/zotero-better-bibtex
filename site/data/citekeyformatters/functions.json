[
  {
    "summary": "<b>auth</b>(n=0, m=1, creator=&#39;*&#39;, initials=false)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>n</code></td>\n            <td>the number of characters to take from the name, 0 = all</td>\n            <td><code>0</code></td>\n            <td>number</td>\n          </tr>\n          <tr>\n            <td><code>m</code></td>\n            <td>select the <code>m</code>th author</td>\n            <td><code>1</code></td>\n            <td>number</td>\n          </tr>\n          <tr>\n            <td><code>creator</code></td>\n            <td>kind of creator to select, <code>*</code> selects <code>author</code> first, and if not present, <code>editor</code>, <code>translator</code> or <code>collaborator</code>, in that order.</td>\n            <td><code>'*'</code></td>\n            <td>('author' | 'editor' | 'translator' | 'collaborator' | '*')</td>\n          </tr>\n          <tr>\n            <td><code>initials</code></td>\n            <td>add author initials</td>\n            <td><code>false</code></td>\n            <td>boolean</td>\n          </tr></table>",
    "description": "The first <code>n</code> (default: all) characters of the <code>m</code>th (default: first) author's last name."
  },
  {
    "summary": "<b>authAuthEa</b>(creator=&#39;*&#39;, initials=false, sep=&#39;.&#39;)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>creator</code></td>\n            <td>kind of creator to select, <code>*</code> selects <code>author</code> first, and if not present, <code>editor</code>, <code>translator</code> or <code>collaborator</code>, in that order.</td>\n            <td><code>'*'</code></td>\n            <td>('author' | 'editor' | 'translator' | 'collaborator' | '*')</td>\n          </tr>\n          <tr>\n            <td><code>initials</code></td>\n            <td>add author initials</td>\n            <td><code>false</code></td>\n            <td>boolean</td>\n          </tr>\n          <tr>\n            <td><code>sep</code></td>\n            <td>use this character between authors</td>\n            <td><code>'.'</code></td>\n            <td>string</td>\n          </tr></table>",
    "description": "The last name of the first two authors, and \".ea\" if there are more than two."
  },
  {
    "summary": "<b>authEtAl</b>(creator=&#39;*&#39;, initials=false, sep=&#39; &#39;)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>creator</code></td>\n            <td>kind of creator to select, <code>*</code> selects <code>author</code> first, and if not present, <code>editor</code>, <code>translator</code> or <code>collaborator</code>, in that order.</td>\n            <td><code>'*'</code></td>\n            <td>('author' | 'editor' | 'translator' | 'collaborator' | '*')</td>\n          </tr>\n          <tr>\n            <td><code>initials</code></td>\n            <td>add author initials</td>\n            <td><code>false</code></td>\n            <td>boolean</td>\n          </tr>\n          <tr>\n            <td><code>sep</code></td>\n            <td>use this character between authors</td>\n            <td><code>' '</code></td>\n            <td>string</td>\n          </tr></table>",
    "description": "The last name of the first author, and the last name of the\nsecond author if there are two authors or \"EtAl\" if there are\nmore than two. This is similar to <code>authEtal2</code>. The difference\nis that the authors are not separated by \".\" and in case of\nmore than 2 authors \"EtAl\" instead of \".etal\" is appended."
  },
  {
    "summary": "<b>authEtal2</b>(creator=&#39;*&#39;, initials=false, sep=&#39;.&#39;)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>creator</code></td>\n            <td>kind of creator to select, <code>*</code> selects <code>author</code> first, and if not present, <code>editor</code>, <code>translator</code> or <code>collaborator</code>, in that order.</td>\n            <td><code>'*'</code></td>\n            <td>('author' | 'editor' | 'translator' | 'collaborator' | '*')</td>\n          </tr>\n          <tr>\n            <td><code>initials</code></td>\n            <td>add author initials</td>\n            <td><code>false</code></td>\n            <td>boolean</td>\n          </tr>\n          <tr>\n            <td><code>sep</code></td>\n            <td>use this character between authors</td>\n            <td><code>'.'</code></td>\n            <td>string</td>\n          </tr></table>",
    "description": "The last name of the first author, and the last name of the second author if there are two authors or \".etal\" if there are more than two."
  },
  {
    "summary": "<b>authForeIni</b>(creator=&#39;*&#39;)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>creator</code></td>\n            <td>kind of creator to select, <code>*</code> selects <code>author</code> first, and if not present, <code>editor</code>, <code>translator</code> or <code>collaborator</code>, in that order.</td>\n            <td><code>'*'</code></td>\n            <td>('author' | 'editor' | 'translator' | 'collaborator' | '*')</td>\n          </tr></table>",
    "description": "The given-name initial of the first author."
  },
  {
    "summary": "<b>authIni</b>(n=0, creator=&#39;*&#39;, initials=false, sep=&#39;.&#39;)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>n</code></td>\n            <td>the number of characters to take from the name, 0 = all</td>\n            <td><code>0</code></td>\n            <td>number</td>\n          </tr>\n          <tr>\n            <td><code>creator</code></td>\n            <td>kind of creator to select, <code>*</code> selects <code>author</code> first, and if not present, <code>editor</code>, <code>translator</code> or <code>collaborator</code>, in that order.</td>\n            <td><code>'*'</code></td>\n            <td>('author' | 'editor' | 'translator' | 'collaborator' | '*')</td>\n          </tr>\n          <tr>\n            <td><code>initials</code></td>\n            <td>add author initials</td>\n            <td><code>false</code></td>\n            <td>boolean</td>\n          </tr>\n          <tr>\n            <td><code>sep</code></td>\n            <td>use this character between authors</td>\n            <td><code>'.'</code></td>\n            <td>string</td>\n          </tr></table>",
    "description": "The beginning of each author's last name, using no more than <code>n</code> characters (0 = all)."
  },
  {
    "summary": "<b>authorIni</b>(creator=&#39;*&#39;, initials=false, sep=&#39;.&#39;)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>creator</code></td>\n            <td>kind of creator to select, <code>*</code> selects <code>author</code> first, and if not present, <code>editor</code>, <code>translator</code> or <code>collaborator</code>, in that order.</td>\n            <td><code>'*'</code></td>\n            <td>('author' | 'editor' | 'translator' | 'collaborator' | '*')</td>\n          </tr>\n          <tr>\n            <td><code>initials</code></td>\n            <td>add author initials</td>\n            <td><code>false</code></td>\n            <td>boolean</td>\n          </tr>\n          <tr>\n            <td><code>sep</code></td>\n            <td>use this character between authors</td>\n            <td><code>'.'</code></td>\n            <td>string</td>\n          </tr></table>",
    "description": "The first 5 characters of the first author's last name, and the last name initials of the remaining authors."
  },
  {
    "summary": "<b>authorLast</b>(creator=&#39;*&#39;, initials=false)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>creator</code></td>\n            <td>kind of creator to select, <code>*</code> selects <code>author</code> first, and if not present, <code>editor</code>, <code>translator</code> or <code>collaborator</code>, in that order.</td>\n            <td><code>'*'</code></td>\n            <td>('author' | 'editor' | 'translator' | 'collaborator' | '*')</td>\n          </tr>\n          <tr>\n            <td><code>initials</code></td>\n            <td>add author initials</td>\n            <td><code>false</code></td>\n            <td>boolean</td>\n          </tr></table>",
    "description": "The last name of the last author"
  },
  {
    "summary": "<b>authorLastForeIni</b>(creator=&#39;*&#39;)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>creator</code></td>\n            <td>kind of creator to select, <code>*</code> selects <code>author</code> first, and if not present, <code>editor</code>, <code>translator</code> or <code>collaborator</code>, in that order.</td>\n            <td><code>'*'</code></td>\n            <td>('author' | 'editor' | 'translator' | 'collaborator' | '*')</td>\n          </tr></table>",
    "description": "The given-name initial of the last author."
  },
  {
    "summary": "<b>authorsAlpha</b>(creator=&#39;*&#39;, initials=false, sep=&#39; &#39;)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>creator</code></td>\n            <td>kind of creator to select, <code>*</code> selects <code>author</code> first, and if not present, <code>editor</code>, <code>translator</code> or <code>collaborator</code>, in that order.</td>\n            <td><code>'*'</code></td>\n            <td>('author' | 'editor' | 'translator' | 'collaborator' | '*')</td>\n          </tr>\n          <tr>\n            <td><code>initials</code></td>\n            <td>add author initials</td>\n            <td><code>false</code></td>\n            <td>boolean</td>\n          </tr>\n          <tr>\n            <td><code>sep</code></td>\n            <td>use this character between authors</td>\n            <td><code>' '</code></td>\n            <td>string</td>\n          </tr></table>",
    "description": "Corresponds to the BibTeX style \"alpha\". One author: First three letters of the last name. Two to four authors: First letters of last names concatenated.\nMore than four authors: First letters of last names of first three authors concatenated. \"+\" at the end."
  },
  {
    "summary": "<b>authorsn</b>(n=0, creator=&#39;*&#39;, initials=false, sep=&#39; &#39;)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>n</code></td>\n            <td>the number of characters to take from the name, 0 = all</td>\n            <td><code>0</code></td>\n            <td>number</td>\n          </tr>\n          <tr>\n            <td><code>creator</code></td>\n            <td>kind of creator to select, <code>*</code> selects <code>author</code> first, and if not present, <code>editor</code>, <code>translator</code> or <code>collaborator</code>, in that order.</td>\n            <td><code>'*'</code></td>\n            <td>('author' | 'editor' | 'translator' | 'collaborator' | '*')</td>\n          </tr>\n          <tr>\n            <td><code>initials</code></td>\n            <td>add author initials</td>\n            <td><code>false</code></td>\n            <td>boolean</td>\n          </tr>\n          <tr>\n            <td><code>sep</code></td>\n            <td>use this character between authors</td>\n            <td><code>' '</code></td>\n            <td>string</td>\n          </tr></table>",
    "description": "The last names of the first <code>n</code> (default: all) authors."
  },
  {
    "summary": "<b>authshort</b>(creator=&#39;*&#39;, initials=false, sep=&#39;.&#39;)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>creator</code></td>\n            <td>kind of creator to select, <code>*</code> selects <code>author</code> first, and if not present, <code>editor</code>, <code>translator</code> or <code>collaborator</code>, in that order.</td>\n            <td><code>'*'</code></td>\n            <td>('author' | 'editor' | 'translator' | 'collaborator' | '*')</td>\n          </tr>\n          <tr>\n            <td><code>initials</code></td>\n            <td>add author initials</td>\n            <td><code>false</code></td>\n            <td>boolean</td>\n          </tr>\n          <tr>\n            <td><code>sep</code></td>\n            <td>use this character between authors</td>\n            <td><code>'.'</code></td>\n            <td>string</td>\n          </tr></table>",
    "description": "The last name if one author/editor is given; the first character\nof up to three authors' last names if more than one author is\ngiven. A plus character is added, if there are more than three\nauthors."
  },
  {
    "summary": "<b>creatornames</b>(template=?, transliterate=?)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>template</code></td>\n            <td>template string</td>\n            <td></td>\n            <td><code>sprintf-style format template</code></td>\n          </tr>\n          <tr>\n            <td><code>transliterate</code></td>\n            <td>transliterate the returned name</td>\n            <td></td>\n            <td>boolean</td>\n          </tr></table>",
    "description": "Sets the sprintf-template default for representing creator names. Default is '%(f)s'.</p>\n<p>in the creator template, you can use:</p>\n<ul>\n<li><code>%(f)s</code>: family (\"last\") name</li>\n<li><code>%(f_zh)s</code>: family (\"last\") name extracted from chinese compound names. Need <code>jieba</code> to be enabled</li>\n<li><code>%(g)s</code>: given (\"first\") name</li>\n<li><code>%(g_zh)s</code>: given (\"first\") name extracted from chinese compound names. Need <code>jieba</code> to be enabled</li>\n<li><code>%(i)s</code>: given-name initials</li>\n<li><code>%(I)s</code>: given-name initials, upper-case</li>\n</ul>"
  },
  {
    "summary": "<b>creators</b>(n=0, type=[[&#39;primary&#39;, &#39;editor&#39;, &#39;translator&#39;, &#39;*&#39;]], name=&#39;&#39;, etal=&#39;&#39;, sep=&#39; &#39;, min=0, max=0)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>n</code></td>\n            <td>select the first <code>n</code> creators (when passing a number) or the authors in this range (inclusive, when passing two values); negative numbers mean \"from the end\", default = 0 = all</td>\n            <td><code>0</code></td>\n            <td>(number | [ number, number ])</td>\n          </tr>\n          <tr>\n            <td><code>type</code></td>\n            <td>select only creators of given type(s). Default: all</td>\n            <td><code>[['primary', 'editor', 'translator', '*']]</code></td>\n            <td>('<em>' | Creator | Creator[] | (Creator | '</em>')[][])</td>\n          </tr>\n          <tr>\n            <td><code>name</code></td>\n            <td>sprintf-js template. Available named parameters are: <code>f</code> (family name), <code>g</code> (given name), <code>i</code> (initials)</td>\n            <td><code>''</code></td>\n            <td>('' | <code>sprintf-style format template</code>)</td>\n          </tr>\n          <tr>\n            <td><code>etal</code></td>\n            <td>use this term to replace authors after <code>n</code> authors have been named</td>\n            <td><code>''</code></td>\n            <td>string</td>\n          </tr>\n          <tr>\n            <td><code>sep</code></td>\n            <td>use this character between authors</td>\n            <td><code>' '</code></td>\n            <td>string</td>\n          </tr>\n          <tr>\n            <td><code>min</code></td>\n            <td>skip to the next pattern if there are less than <code>min</code> creators, 0 = ignore</td>\n            <td><code>0</code></td>\n            <td>number</td>\n          </tr>\n          <tr>\n            <td><code>max</code></td>\n            <td>skip to the next pattern if there are more than <code>max</code> creators, 0 = ignore</td>\n            <td><code>0</code></td>\n            <td>number</td>\n          </tr></table>",
    "description": "Author/editor information.</p>\n<p>creator type can be one or more of <code>artist</code>, <code>attorneyAgent</code>, <code>author</code>, <code>bookAuthor</code>, <code>cartographer</code>, <code>castMember</code>, <code>commenter</code>, <code>composer</code>, <code>contributor</code>, <code>cosponsor</code>, <code>counsel</code>, <code>director</code>, <code>editor</code>, <code>guest</code>, <code>interviewee</code>, <code>interviewer</code>, <code>inventor</code>, <code>performer</code>, <code>podcaster</code>, <code>presenter</code>, <code>producer</code>, <code>programmer</code>, <code>recipient</code>, <code>reviewedAuthor</code>, <code>scriptwriter</code>, <code>seriesEditor</code>, <code>sponsor</code>, <code>translator</code>, <code>wordsBy</code></p>\n<p>in the creator template, you can use:</p>\n<ul>\n<li><code>%(f)s</code>: family (\"last\") name</li>\n<li><code>%(f_zh)s</code>: family (\"last\") name extracted from chinese compound names. Need <code>jieba</code> to be enabled</li>\n<li><code>%(g)s</code>: given (\"first\") name</li>\n<li><code>%(g_zh)s</code>: given (\"first\") name extracted from chinese compound names. Need <code>jieba</code> to be enabled</li>\n<li><code>%(i)s</code>: given-name initials</li>\n<li><code>%(I)s</code>: given-name initials, upper-case</li>\n</ul>"
  },
  {
    "summary": "<b>creatortypes</b>(match=?)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>match</code></td>\n            <td>Regex to test the creator-type list. When passed, and the creator-type list does not match the regex, jump to the next formule. When it matches, return nothing but stay in the current formule. When no regex is passed, output the creator-type list for the item (mainly useful for debugging).</td>\n            <td></td>\n            <td>RegExp</td>\n          </tr></table>",
    "description": "This will return a comma-separated list of creator type information for all creators on the item\nin the form <code>&lt;1 or 2&gt;&lt;creator-type&gt;</code>, where <code>1</code> or <code>2</code> denotes a 1-part or 2-part creator, and <code>creator-type</code> is one of {{% citekey-formatters/creatortypes %}}, or <code>primary</code> for\nthe primary creator-type of the Zotero item under consideration. The list is prefixed by the item type, so might look like <code>audioRecording:2performer,2performer,1composer</code>."
  },
  {
    "summary": "<b>date</b>(format=&#39;%Y-%m-%d&#39;)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>format</code></td>\n            <td>sprintf-style format template</td>\n            <td><code>'%Y-%m-%d'</code></td>\n            <td>string</td>\n          </tr></table>",
    "description": "The date of the publication"
  },
  {
    "summary": "<b>extra</b>(variable=?)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>variable</code></td>\n            <td>extra-field line identifier</td>\n            <td>none; must be provided</td>\n            <td>string</td>\n          </tr></table>",
    "description": "A pseudo-field from the extra field. eg if you have <code>Original date: 1970</code> in your <code>extra</code> field, you can get it as\n<code>extra(originalDate)</code>, or <code>tex.shortauthor: APA</code> which you could\nget with <code>extra('tex.shortauthor')</code>. Any <code>tex.</code> field will be\npicked up, the other fields can be selected from <a href=\"https://retorque.re/zotero-better-bibtex/exporting/extra-fields/\">this list</a>\nof key names."
  },
  {
    "summary": "<b>firstpage</b>",
    "parameters": "",
    "description": "The number of the first page of the publication (Caution: this\nwill return the lowest number found in the pages field, since\nBibTeX allows <code>7,41,73--97</code> or <code>43+</code>.)"
  },
  {
    "summary": "<b>group</b>(name=?)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>name</code></td>\n            <td>group name</td>\n            <td>none; must be provided</td>\n            <td>string</td>\n          </tr></table>",
    "description": "Tests whether the item is in the given group library"
  },
  {
    "summary": "<b>infix</b>(format=&#39;%(a)s&#39;, start=0)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>format</code></td>\n            <td>sprintf-style format template</td>\n            <td><code>'%(a)s'</code></td>\n            <td><code>sprintf-style format template</code></td>\n          </tr>\n          <tr>\n            <td><code>start</code></td>\n            <td>start value for postfix</td>\n            <td><code>0</code></td>\n            <td>(string | number)</td>\n          </tr></table>",
    "description": "a pseudo-function that sets the citekey disambiguation infix using an <a href=\"https://www.npmjs.com/package/sprintf-js\">sprintf-js</a> format spec\nfor when a key is generated that already exists. The infix charachter appears at the place of this function of the formula instead of at the and (as postfix does).\nYou <em>must</em> include <em>exactly one</em> of the placeholders <code>%(n)s</code> (number), <code>%(a)s</code> (alpha, lowercase) or <code>%(A)s</code> (alpha, uppercase).\nFor the rest of the disambiguator you can use things like padding and extra text as sprintf-js allows. With start set to <code>1</code> the disambiguator is always included,\neven if there is no need for it when no duplicates exist. The default  format is <code>%(a)s</code>.</p>\n<p>in the template, you can use:</p>\n<ul>\n<li><code>%(a)s</code>: lower-case alphabetic disambiguator</li>\n<li><code>%(A)s</code>: upper-case alphabetic disambiguator</li>\n<li><code>%(n)s</code>: numeric disambiguator</li>\n</ul>"
  },
  {
    "summary": "<b>inspireHep</b>",
    "parameters": "",
    "description": "Fetches the key from inspire-hep based on DOI or arXiv ID"
  },
  {
    "summary": "<b>item</b>(id=&#39;key&#39;)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>id</code></td>\n            <td>'id': return itemID; 'key': return the item key</td>\n            <td><code>'key'</code></td>\n            <td>('key' | 'id')</td>\n          </tr></table>",
    "description": "returns the internal item ID/key"
  },
  {
    "summary": "<b>journal</b>(abbrev=&#39;abbrev+auto&#39;)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>abbrev</code></td>\n            <td>abbreviation mode</td>\n            <td><code>'abbrev+auto'</code></td>\n            <td>('off' | 'abbrev' | 'auto' | 'abbrev+auto' | 'full')</td>\n          </tr></table>",
    "description": "returns the journal abbreviation, or, if not found, the journal title, If 'automatic journal abbreviation' is enabled in the BBT settings,\nit will use the same abbreviation filter Zotero uses in the wordprocessor integration. You might want to use the <code>abbr</code> filter on this.\nAbbreviation behavior can be specified as <code>abbrev+auto</code> (the default) which uses the explicit journal abbreviation if present, and tries the automatic\nabbreviator if not (if auto-abbrev is enabled in the preferences), <code>auto</code> (skip explicit journal abbreviation even if present), <code>abbrev</code>\n(no auto-abbrev even if it is enabled in the preferences) or <code>full</code>/<code>off</code> (no abbrevation)."
  },
  {
    "summary": "<b>keyword</b>(n=?)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>n</code></td>\n            <td>position of tag to get</td>\n            <td>none; must be provided</td>\n            <td>number</td>\n          </tr></table>",
    "description": "Tag number <code>n</code>. Mostly for legacy compatibility"
  },
  {
    "summary": "<b>language</b>(name=...)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>name</code></td>\n            <td>one or more language codes</td>\n            <td>none; must be provided</td>\n            <td>string[]</td>\n          </tr></table>",
    "description": "Tests whether the item has the given language set, and skips to the next pattern if not</p>\n<p>language can be one or more of <code>ame</code>, <code>american</code>, <code>'american english'</code>, <code>americanenglish</code>, <code>ar</code>, <code>'ar-ar'</code>, <code>'ar-dz'</code>, <code>'ar-eg'</code>, <code>'ar-iq'</code>, <code>'ar-jo'</code>, <code>'ar-lb'</code>, <code>'ar-ma'</code>, <code>'ar-ps'</code>, <code>'ar-sa'</code>, <code>'ar-sy'</code>, <code>'ar-tn'</code>, <code>ara</code>, <code>arabic</code>, <code>'arabic-algeria'</code>, <code>'arabic-dz'</code>, <code>'arabic-eg'</code>, <code>'arabic-egypt'</code>, <code>'arabic-iq'</code>, <code>'arabic-iraq'</code>, <code>'arabic-jo'</code>, <code>'arabic-jordan'</code>, <code>'arabic-lb'</code>, <code>'arabic-lebanon'</code>, <code>'arabic-ma'</code>, <code>'arabic-morocco'</code>, <code>'arabic-palestinianterritories'</code>, <code>'arabic-ps'</code>, <code>'arabic-sa'</code>, <code>'arabic-saudiarabia'</code>, <code>'arabic-sy'</code>, <code>'arabic-syria'</code>, <code>'arabic-tn'</code>, <code>'arabic-tunisia'</code>, <code>australian</code>, <code>'australian english'</code>, <code>australianenglish</code>, <code>austrian</code>, <code>'austrian german'</code>, <code>'austrian-traditional'</code>, <code>austriangerman</code>, <code>'austriangerman-traditional'</code>, <code>bri</code>, <code>british</code>, <code>'british english'</code>, <code>britishenglish</code>, <code>canadian</code>, <code>'canadian english'</code>, <code>canadianenglish</code>, <code>chinese</code>, <code>'chinese-hans'</code>, <code>'chinese-hans-hk'</code>, <code>'chinese-hans-mo'</code>, <code>'chinese-hans-sg'</code>, <code>'chinese-hant'</code>, <code>'chinese-hant-hk'</code>, <code>'chinese-hant-mo'</code>, <code>'chinese-simplified'</code>, <code>'chinese-simplified-hongkongsarchina'</code>, <code>'chinese-simplified-macausarchina'</code>, <code>'chinese-simplified-singapore'</code>, <code>'chinese-traditional'</code>, <code>'chinese-traditional-hongkongsarchina'</code>, <code>'chinese-traditional-macausarchina'</code>, <code>de</code>, <code>'de-1901'</code>, <code>'de-1996'</code>, <code>'de-at'</code>, <code>'de-at-1901'</code>, <code>'de-at-1996'</code>, <code>'de-ch'</code>, <code>'de-ch-1901'</code>, <code>'de-ch-1996'</code>, <code>'de-de'</code>, <code>deutsch</code>, <code>en</code>, <code>'en-au'</code>, <code>'en-ca'</code>, <code>'en-en'</code>, <code>'en-gb'</code>, <code>'en-nz'</code>, <code>'en-us'</code>, <code>eng</code>, <code>english</code>, <code>'english-au'</code>, <code>'english-australia'</code>, <code>'english-ca'</code>, <code>'english-canada'</code>, <code>'english-gb'</code>, <code>'english-newzealand'</code>, <code>'english-nz'</code>, <code>'english-unitedkingdom'</code>, <code>'english-unitedstates'</code>, <code>'english-us'</code>, <code>ger</code>, <code>german</code>, <code>'german-at'</code>, <code>'german-at-traditional'</code>, <code>'german-austria'</code>, <code>'german-austria-traditional'</code>, <code>'german-ch'</code>, <code>'german-ch-traditional'</code>, <code>'german-switzerland'</code>, <code>'german-switzerland-traditional'</code>, <code>'german-traditional'</code>, <code>ja</code>, <code>'ja-ja'</code>, <code>jap</code>, <code>japanese</code>, <code>nau</code>, <code>naustrian</code>, <code>newzealand</code>, <code>nge</code>, <code>ngerman</code>, <code>nsw</code>, <code>nswissgerman</code>, <code>'schweizer hochdeutsch'</code>, <code>'simplified chinese'</code>, <code>'swiss high german'</code>, <code>swisshighgerman</code>, <code>'swisshighgerman-traditional'</code>, <code>'traditional chinese'</code>, <code>tw</code>, <code>ukenglish</code>, <code>usenglish</code>, <code>zh</code>, <code>'zh-hans'</code>, <code>'zh-hans-hk'</code>, <code>'zh-hans-mo'</code>, <code>'zh-hans-sg'</code>, <code>'zh-hant'</code>, <code>'zh-hant-hk'</code>, <code>'zh-hant-mo'</code>, <code>'zh-tw'</code>, <code>'zh-zh'</code>, <code>'österreichisches deutsch'</code>, <code>'العربية'</code>, <code>'中文'</code>, <code>'中文-中文'</code>, <code>'日本語'</code>, <code>'简体中文'</code>, <code>'繁體中文'</code>"
  },
  {
    "summary": "<b>lastpage</b>",
    "parameters": "",
    "description": "The number of the last page of the publication (See the remark on <code>firstpage</code>)"
  },
  {
    "summary": "<b>library</b>",
    "parameters": "",
    "description": "Tests whether the item is in the user library"
  },
  {
    "summary": "<b>month</b>",
    "parameters": "",
    "description": "the month of the publication"
  },
  {
    "summary": "<b>origdate</b>",
    "parameters": "",
    "description": "the original date of the publication"
  },
  {
    "summary": "<b>origyear</b>",
    "parameters": "",
    "description": "the original year of the publication"
  },
  {
    "summary": "<b>postfix</b>(format=&#39;%(a)s&#39;, start=0)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>format</code></td>\n            <td>sprintf-style format template</td>\n            <td><code>'%(a)s'</code></td>\n            <td><code>sprintf-style format template</code></td>\n          </tr>\n          <tr>\n            <td><code>start</code></td>\n            <td>start value for postfix</td>\n            <td><code>0</code></td>\n            <td>(string | number)</td>\n          </tr></table>",
    "description": "a pseudo-function that sets the citekey disambiguation postfix using an <a href=\"https://www.npmjs.com/package/sprintf-js\">sprintf-js</a> format spec\nfor when a key is generated that already exists. Does not add any text to the citekey otherwise.\nYou <em>must</em> include <em>exactly one</em> of the placeholders <code>%(n)s</code> (number), <code>%(a)s</code> (alpha, lowercase) or <code>%(A)s</code> (alpha, uppercase).\nFor the rest of the disambiguator you can use things like padding and extra text as sprintf-js allows. With start set to <code>1</code> the disambiguator is always included,\neven if there is no need for it when no duplicates exist. The default  format is <code>%(a)s</code>.</p>\n<p>in the template, you can use:</p>\n<ul>\n<li><code>%(a)s</code>: lower-case alphabetic disambiguator</li>\n<li><code>%(A)s</code>: upper-case alphabetic disambiguator</li>\n<li><code>%(n)s</code>: numeric disambiguator</li>\n</ul>"
  },
  {
    "summary": "<b>shorttitle</b>(n=3, m=0)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>n</code></td>\n            <td>number of words to select</td>\n            <td><code>3</code></td>\n            <td>number</td>\n          </tr>\n          <tr>\n            <td><code>m</code></td>\n            <td>number of words to capitalize. <code>0</code> means no words will be capitalized. Mind that existing capitals are not removed. If you enable capitalization, you also get transliteration; for CJK, capitalization is not meaningful, so if you want capitalization, BBT romanizes first.</td>\n            <td><code>0</code></td>\n            <td>number</td>\n          </tr></table>",
    "description": "The first <code>n</code> (default: 3) words of the title, apply capitalization to first <code>m</code> (default: 0) of those."
  },
  {
    "summary": "<b>shortyear</b>",
    "parameters": "",
    "description": "The last 2 digits of the publication year"
  },
  {
    "summary": "<b>title</b>",
    "parameters": "",
    "description": "Capitalize all the significant words of the title, and concatenate them. For example, <code>An awesome paper on JabRef</code> will become <code>AnAwesomePaperJabref</code>"
  },
  {
    "summary": "<b>transliterate</b>(mode=?)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>mode</code></td>\n            <td>specialized translateration modes for german, japanese or chinese.</td>\n            <td>none; must be provided</td>\n            <td>(('minimal' | 'german' | 'japanese' | 'chinese' | 'arabic' | 'ukranian' | 'mongolian' | 'russian') | 'de' | 'ja' | 'chinese-traditional' | 'zh-hant' | 'zh' | 'tw' | 'ar' | 'uk' | 'mn' | 'ru')</td>\n          </tr></table>",
    "description": "Set the default transliteration mode. If you don't specify a mode, the mode for an entry is derived from the item language field"
  },
  {
    "summary": "<b>type</b>(allowed=...)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>allowed</code></td>\n            <td>one or more item type names</td>\n            <td>none; must be provided</td>\n            <td>string[]</td>\n          </tr></table>",
    "description": "Without arguments, returns the item type.\nWhen arguments as passed, tests whether the item is of any of the given types, and skips to the next pattern if not, eg <code>type(book) + veryshorttitle | auth + year</code>.</p>\n<p>creator type can be one or more of <code>annotation</code>, <code>artwork</code>, <code>attachment</code>, <code>audioRecording</code>, <code>bill</code>, <code>blogPost</code>, <code>book</code>, <code>bookSection</code>, <code>case</code>, <code>computerProgram</code>, <code>conferencePaper</code>, <code>dataset</code>, <code>dictionaryEntry</code>, <code>document</code>, <code>email</code>, <code>encyclopediaArticle</code>, <code>film</code>, <code>forumPost</code>, <code>hearing</code>, <code>instantMessage</code>, <code>interview</code>, <code>journalArticle</code>, <code>letter</code>, <code>magazineArticle</code>, <code>manuscript</code>, <code>map</code>, <code>newspaperArticle</code>, <code>note</code>, <code>patent</code>, <code>podcast</code>, <code>preprint</code>, <code>presentation</code>, <code>radioBroadcast</code>, <code>report</code>, <code>standard</code>, <code>statute</code>, <code>thesis</code>, <code>tvBroadcast</code>, <code>videoRecording</code>, <code>webpage</code>"
  },
  {
    "summary": "<b>veryshorttitle</b>(n=1, m=0)",
    "parameters": "<table>\n          <tr>\n            <th><b>parameter</b></th>\n            <th/>\n            <th>value assumed when not provided</th>\n            <th>valid values</th>\n          </tr>\n          <tr>\n            <td><code>n</code></td>\n            <td>number of words to select</td>\n            <td><code>1</code></td>\n            <td>number</td>\n          </tr>\n          <tr>\n            <td><code>m</code></td>\n            <td>number of words to capitalize. <code>0</code> means no words will be capitalized. Mind that existing capitals are not removed.</td>\n            <td><code>0</code></td>\n            <td>number</td>\n          </tr></table>",
    "description": "The first <code>n</code> words of the title, apply capitalization to first <code>m</code> of those"
  },
  {
    "summary": "<b>year</b>",
    "parameters": "",
    "description": "The year of the publication"
  },
  {
    "summary": "<b>zotero</b>",
    "parameters": "",
    "description": "Generates citation keys as the stock Zotero Bib(La)TeX export\ndoes. Note that this pattern inherits all the problems of the\noriginal Zotero citekey generation -- you should really only\nuse this if you have existing papers that rely on this behavior."
  }
]