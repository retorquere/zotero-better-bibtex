preference#pref-better-bibtex-DOIandURL(name="extensions.zotero.translators.better-bibtex.DOIandURL" bbt:affects="tex" type="string" default="both")
bbt:doc.
  Does what it says on the tin, really. If an item has both a DOI and an URL, you can choose to have them both exported, or either one of them. Note that for BibTeX,
  you must load the `url` package when you have `doi` or `url` fields. `doi` and `url` fields are so-called `verbatim` fields with different escaping rules, and
  BibTeX compilation will likely error out without the package loaded.

preference#pref-better-bibtex-automaticTags(name="extensions.zotero.translators.better-bibtex.automaticTags" bbt:affects="*" type="bool" default="true")
bbt:doc.
  Some importers or Zotero extensions (such as the ShortDOI manager for example) create tags on items that are more for item management than that
  they are descriptive of the item. When this is off, such tags will not be included in the export.

preference#pref-better-bibtex-asciiBibLaTeX(name="extensions.zotero.translators.better-bibtex.asciiBibLaTeX" bbt:affects="biblatex" type="bool" default="false")
bbt:doc.
  BibLaTeX actually has really good Unicode support, so you generally want this off. But for some geezers such as me it is
  simply more pleasing to have things like accented characters translated to their equivalent LaTeX constructs on export.

preference(name="extensions.zotero.translators.better-bibtex.ascii" bbt:affects="tex" type="string" default="")
bbt:doc.
  If you have unicode turned on you can still selectively replace some characters to plain-text commands; any characters entered here will always
  be replaced by their LaTeX-command counterparts.

preference#pref-better-bibtex-asciiBibTeX(name="extensions.zotero.translators.better-bibtex.asciiBibTeX" bbt:affects="bibtex" type="bool" default="true")
bbt:doc.
  BibTeX has really spotty Unicode support, so you generally want this on. It will translate things like accented characters
  to their equivalent LaTeX constructs on export.

preference#pref-better-bibtex-autoExport(name="extensions.zotero.translators.better-bibtex.autoExport" bbt:affects="" type="string" default="immediate")
bbt:doc.
  Determines when [automatic exports]({{ ref . "exporting" }}) are kicked off. Having it disabled still marks
  auto-exports as needing updates, so when you re-enable it, those exports will start. On-change means exports
  happen whenever an item in the export changes/is added/is removed. On idle does more or less what
  `Disabled` (that is, no exports but mark as needing changes), but will kick off exports when your computer is
  idle. You mostly want this if your computer is performance-constrained (aka slow).

preference#pref-better-bibtex-quickCopyMode(name="extensions.zotero.translators.better-bibtex.quickCopyMode" bbt:affects="" type="string" default="latex")
bbt:doc.
  Used for drag-and-drop/quick copy using Better BibTeX citation keys. In the Zotero "Export" pane, choose `Better BibTeX Quick Copy`
  as the default export format for quick copy, and choose the desired format for the drag-and-drop citations here.

preference#pref-better-bibtex-citeCommand(name="extensions.zotero.translators.better-bibtex.citeCommand" bbt:affects="" type="string" default="cite")
bbt:doc.
  Used for drag-and-drop/quick copy citations in `LaTeX` format. Set the desired LaTeX citation command here. If you set this to `citep`,
  drag-and-drop citations will yield `\citep{key1,key2,...}`

preference#pref-better-bibtex-quickCopyPandocBrackets(name="extensions.zotero.translators.better-bibtex.quickCopyPandocBrackets" bbt:affects="" type="bool" default="false")
bbt:doc.
  Used for drag-and-drop/quick copy citations in `Pandoc` format. You can use this option to select whether you want
  to have these pandoc citations surrounded with brackets or not.

preference#pref-better-bibtex-quickCopyEta(name="extensions.zotero.translators.better-bibtex.quickCopyEta" bbt:affects="" type="string" default="")
bbt:doc.
  Used for drag-and-drop/quick copy citations in `Build your own` format. This is going to get pretty technical, sorry.
  You can paste a [Eta](https://eta.js.org/) template here. Inside the template, you will find an array `it.items`, each of which is a serialized Zotero item.
  To find out what an item looks like inside the template, export some items as BetterBibTeX JSON.

preference#pref-better-bibtex-quickCopyOrgMode(name="extensions.zotero.translators.better-bibtex.quickCopyOrgMode" bbt:affects="" type="string" default="zotero")
bbt:doc OrgMode to select items in your library

preference#pref-better-bibtex-quickCopySelectLink(name="extensions.zotero.translators.better-bibtex.quickCopySelectLink" bbt:affects="" type="string" default="zotero")
bbt:doc Hyperlink to select items in your library

// the zero-width-space is a marker to re-save the current default so it doesn't get replaced when the default changes later, which would change new keys suddenly
preference#pref-better-bibtex-citekeyFormat(name="extensions.zotero.translators.better-bibtex.citekeyFormat" bbt:affects="" type="string" default="\u200bauth.lower + shorttitle(3,3) + year")
bbt:doc Set the pattern used to generate citation keys. The format of the keys is documented [here]({{ ref . "citing" }}).
preference#pref-better-bibtex-citekeyFormatBackup(name="extensions.zotero.translators.better-bibtex.citekeyFormatBackup" bbt:affects="" type="string" default="")

preference#pref-better-bibtex-citekeySearch(name="extensions.zotero.translators.better-bibtex.citekeySearch" bbt:affects="" type="bool" default="true")
bbt:doc Enable searching on citation keys. Slows down startup on very large libraries. Requires Zotero restart to enable/disable.

preference#pref-better-bibtex-citekeyFold(name="extensions.zotero.translators.better-bibtex.citekeyFold" bbt:affects="" type="bool" default="true")
bbt:doc.
  If you have deviated from the default citation key format pattern by [specifying your own]({{ ref . "citing" }}), you may
  wind up with non-ASCII characters in your citation keys. You can prevent that using the `fold` function at the
  appropriate place in your pattern, but checking this checkbox will just apply `fold` to all your keys.

preference#pref-better-bibtex-keyConflictPolicy(name="extensions.zotero.translators.better-bibtex.keyConflictPolicy" bbt:affects="" type="string" default="keep")
bbt:doc.
  This determines what happens if you pin a key to a value that is already in use in a different item but not pinned there.
  Neither are ideal, you just get to pick your poison. If you let BBT change the non-pinned key by adding a postfix character,
  the citation key changes which could be problematic for existing papers. If you keep the non-pinned key as-is, your library now has duplicate keys.

preference#pref-better-bibtex-aux-import(name="extensions.zotero.translators.better-bibtex.auxImport" bbt:affects="" type="bool" default="false")
bbt:doc.
  By default, when scanning for cited items in the aux file, BBT will just generate a note listing all citation keys it cannot find in Zotero.
  When this option is turned on, BBT will attempt to import such missing items from the bib file that the AUX file being scanned points to.

preference#pref-better-bibtex-keyScope(name="extensions.zotero.translators.better-bibtex.keyScope" bbt:affects="" type="string" default="library")
bbt:doc.
  Auto-generated (non-pinned) keys automatically get a postfix when they would generate a duplicate. By default, the check for duplicates is restricted
  to the library/group the item lives in. When set to global, the check will include all libraries/groups, so auto-generated keys would be globally
  unique. Changing this setting *does not* affect existign keys - for this you would need to select the items and refresh the keys.

// preference name="extensions.zotero.translators.better-bibtex.langID" id="pref-better-bibtex-langID" type="string"
// Switches between `babel` and `polyglossia`, except I haven't gotten around to polyglossia yet.

preference#pref-better-bibtex-exportBibTeXStrings(name="extensions.zotero.translators.better-bibtex.exportBibTeXStrings" bbt:affects="tex" type="string" default="off")
bbt:doc.
  When enabled, BBT will try to retain @string vars its exports unsurrounded by braces; when set to 'detect', single-word strings will be assumed to be externally-defined @string vars,
  when set to 'match', only @strings declared in the @strings section of the preferences will be preserved. If you don't know what this means, leave it off.

preference#pref-better-bibtex-importBibTeXStrings(name="extensions.zotero.translators.better-bibtex.importBibTeXStrings" bbt:affects="" type="bool" default="true")
bbt:doc When enabled, BBT will prepend the @strings section below to all Bib(La)TeX imports and will expand the strings during export.

preference#pref-better-bibtex-bibtexParticleNoOp(name="extensions.zotero.translators.better-bibtex.bibtexParticleNoOp" bbt:affects="bibtex" type="bool" default="false")
bbt:doc.
  Name handling is a lot more complex than I had ever thought it to be. A *lot* more complex. BibTeX has really limited ways of dealing with names with particles (van, von, de, etc). If you turn this on, BBT will add code to have `van Gogh` sorted under `Gogh`.

preference#pref-better-bibtex-skipFields(name="extensions.zotero.translators.better-bibtex.skipFields" bbt:affects="*" type="string" default="")
bbt:doc If there are some fields you don't want in your bibtex files (such as `note` for example), add a list of them here, separated by comma's.

preference#pref-better-bibtex-warnBulkModify(name="extensions.zotero.translators.better-bibtex.warnBulkModify" bbt:affects="" type="int" default="10")
bbt:doc.
  For those who are curious about what the `Clear/Generate BibTeX key` right-click options do, this will warn
  you if you are doing this on more than 10 (default) at the same time, to prevent your curiosity from changing
  all your citation keys at once.

preference#pref-better-bibtex-postscript(name="extensions.zotero.translators.better-bibtex.postscript" bbt:affects="*" type="string" default="")
bbt:doc Snippet of javascript to run [after each entry generation]({{ ref . "exporting/scripting.md" }}).

preference#pref-better-bibtex-strings(name="extensions.zotero.translators.better-bibtex.strings" bbt:affects="tex" type="string" default="")
bbt:doc If you have externally maintained `@string` vars paste them here and they will be resolved for subsequent imports. These should be entered as `@string` declarations, such as `@string{IEEE_J_PWRE = "{IEEE} Transactions on Power Electronics"}`, not just the var name.

preference#pref-better-bibtex-autoAbbrev(name="extensions.zotero.translators.better-bibtex.autoAbbrev" bbt:affects="*" type="bool" default="false")
bbt:doc If set, generates journal abbreviations on export using the Zotero journal abbreviator, according to the abbreviation style selected in the list below the checkbox.

preference#pref-better-bibtex-autoAbbrevStyle(name="extensions.zotero.translators.better-bibtex.autoAbbrevStyle" bbt:affects="*" type="string" default="")
bbt:doc.
  Select the style for auto-abbreviation. Only applicable to Juris-M; in Zotero, the style for automatic
  abbreviation is not configurable.

preference(name="extensions.zotero.translators.better-bibtex.autoExportIdleWait" bbt:affects="" type="int" default="10")
bbt:doc Number of seconds to wait after your system goes idle before kicking off auto-exports.

preference(name="extensions.zotero.translators.better-bibtex.cacheFlushInterval" bbt:affects="" type="int" default="5")
bbt:doc.
  How often the Better BibTeX database should be saved to disk. Defaults to once every 5 seconds. Note that
  your database is always saved when your computer goes idle, or when you exit Zotero.

preference(name="extensions.zotero.translators.better-bibtex.csquotes" bbt:affects="tex" type="string" default="")
bbt:doc.
  if you set `csquotes` to a string of character pairs, each pair will be assumed to be the open and close parts of a pair and
  will be replaced with a `\\enquote{...}` construct.

preference(name="extensions.zotero.translators.better-bibtex.patchDates" bbt:affects="" type="string" default="")
bbt:doc.
  Import translators cannot set the date-added and date-modified of the items that are imported, they always get the current time as their date-added. BBT will leave fields it can't map as
  `tex.[field]` in the `extra` field of the item. If you enter a list of comma-separated field mappings here, like `date-added = dateAdded, timestamp=dateModified`, BBT will offer a menu option
  to remove them from the `extra` field and set the corresponding date of the item to their values, assuming they can be parsed as simple dates (no circa and stuff). The default mappings `tex.dateadded=dateadded, tex.datemodified=datemodified` are always active.

preference(name="extensions.zotero.translators.better-bibtex.rawLaTag" bbt:affects="tex" type="string" default="#LaTeX")
bbt:doc.
  When an item has this tag, all its fields will be assumed to hold raw LaTeX and will undergo no further transformation.
  If you set this to `*`, all items will be assumed to have raw LaTeX.

preference(name="extensions.zotero.translators.better-bibtex.rawImports" bbt:affects="" type="bool" default="false")
bbt:doc When you set this on, BBT will import bib files leaving any LaTeX commands as-is, and add the #LaTeX tag for raw re-exports.

preference(name="extensions.zotero.translators.better-bibtex.skipWords" bbt:affects="tex" type="string" default="a,ab,aboard,about,above,across,after,against,al,along,amid,among,an,and,anti,around,as,at,before,behind,below,beneath,beside,besides,between,beyond,but,by,d,da,das,de,del,dell,dello,dei,degli,della,dell,delle,dem,den,der,des,despite,die,do,down,du,during,ein,eine,einem,einen,einer,eines,el,en,et,except,for,from,gli,i,il,in,inside,into,is,l,la,las,le,les,like,lo,los,near,nor,of,off,on,onto,or,over,past,per,plus,round,save,since,so,some,sur,than,the,through,to,toward,towards,un,una,unas,under,underneath,une,unlike,uno,unos,until,up,upon,versus,via,von,while,with,within,without,yet,zu,zum")
bbt:doc list of words to skip in title when generating citation keys

preference(name="extensions.zotero.translators.better-bibtex.verbatimFields" bbt:affects="" type="string" default="url,doi,file,ids,eprint,verba,verbb,verbc,groups")
bbt:doc list of fields to treat as verbatim during import. If you're importing e.g. Mendeley-generated BibTeX, which is out of spec in various ways, try removing `file` from this list before import.

preference#pref-better-bibtex-qualityReport(name="extensions.zotero.translators.better-bibtex.qualityReport" bbt:affects="tex" type="bool" default="false")
bbt:doc.
  Generate quality reports for exported entries. These show up only in BibTeX and BibLaTeX report formats and indicate things like missing required fields and
  duplicate citation keys.

preference(name="extensions.zotero.translators.better-bibtex.biblatexExtendedDateFormat" bbt:affects="biblatex" type="bool" default="true")
bbt:doc Support for EDTF dates in biblatex

preference#pref-better-bibtex-biblatexExtendedNameFormat(name="extensions.zotero.translators.better-bibtex.biblatexExtendedNameFormat" bbt:affects="biblatex" type="bool" default="false")
bbt:doc.
  Use the extended biber 2.7 format for names with particles - only works in BibLaTeX 3.5 or later.
  This biblatex has a new (less ambiguous) way to store creator names. It's technically
  superior, but the LaTeX world moves slowly, so many people won't have it yet. But if you're an early adopter,
  you can enable it here

preference(name="extensions.zotero.translators.better-bibtex.startupProgress" bbt:affects="" type="string" default="popup")
bbt:doc.
  Zotero takes a few seconds to start up, which is sometimes mistakenly attributed to BBT. BBT will tell you what phase the startup process is in (of Zotero and BBT) to
  prevent support requests for something that I cannot change. Please only use values:
  
  * `popup`: show a popup during startup
  * `progressbar`: show a progressbar in the top of the frame
preference(name="extensions.zotero.translators.better-bibtex.importUnknownTexCommand" bbt:affects="" type="string" default="ignore")
bbt:doc.
  What to do when encountering a TeX command the parser does not know about. Please only use values:

  * `ignore`: ignore the command entirely
  * `tex`: import and mark as TeX code, so on re-export it will be output as-is
  * `text`: import without marking it as TeX code, so on re-export it will be treated as regular text

preference(name="extensions.zotero.translators.better-bibtex.autoExportDelay" bbt:affects="" type="int" default="5")
bbt:doc.
  If you have auto-exports set up, BBT will wait this many seconds before actually kicking off the exports to buffer multiple changes in quick succession
  setting off an unreasonable number of auto-exports. Minimum is 1 second. Changes to this preference take effect after restarting Zotero.

preference(name="extensions.zotero.translators.better-bibtex.warnTitleCased" bbt:affects="" type="bool" default="false")
bbt:doc.
  Both Zotero and BBT expect titles to be in sentence-case, but a lot of sites offer import data that is Title Cased. When exporting these titles to bib(la)tex you're going
  to get a lot of extra unwanted braces, because all these Title Cased words will look like proper nouns to BBTs own title-casing mechanism. When this setting is on, you will be warned
  when you import/save items in Zotero with titles that look like they're Title Cased, so that you can inspect/correct them.

preference(name="extensions.zotero.translators.better-bibtex.itemObserverDelay" bbt:affects="" type="int" default="5")
bbt:doc.
  I've had reports where Zotero notifies extensions that items have changed, but if BBT then actually
  retrieves those same items, Zotero complains they "haven't been saved yet". Super. This preference sets
  the number of microseconds BBT should wait after being notified before acting on the changed items.

preference(name="extensions.zotero.translators.better-bibtex.autoPinDelay" bbt:affects="" type="int" default="0")
bbt:doc When > 0, BBT will automatically pin the first citation keys it generates for an item after this many seconds.

preference(name="extensions.zotero.translators.better-bibtex.parseParticles" bbt:affects="*" type="bool" default="true")
bbt:doc Name particle handling. Only turn on when requested and we're talking about it on github.

preference(name="extensions.zotero.translators.better-bibtex.import" bbt:affects="" type="bool" default="true")
bbt:doc Use BBTs importer instead of Zotero's importer

preference(name="extensions.zotero.translators.better-bibtex.importExtra" bbt:affects="" type="bool" default="true")
bbt:doc On import, place all bib(la)tex field Zotero doesn't have an existing field for in the Zotero `extra` field of the item

preference(name="extensions.zotero.translators.better-bibtex.importCitationKey" bbt:affects="" type="bool" default="true")
bbt:doc On import, assign the existing citation key to the item being imported

preference#pref-better-bibtex-extraMergeTeX(name="extensions.zotero.translators.better-bibtex.extraMergeTeX" bbt:affects="" type="bool" default="false")
bbt:doc When merging items, also merge their `tex.*` fields.

preference#pref-better-bibtex-extraMergeCSL(name="extensions.zotero.translators.better-bibtex.extraMergeCSL" bbt:affects="" type="bool" default="false")
bbt:doc When merging items, also merge fields that are understood to be CSL fields by Zotero.

preference#pref-better-bibtex-extraMergeCitekeys(name="extensions.zotero.translators.better-bibtex.extraMergeCitekeys" bbt:affects="" type="bool" default="false")
bbt:doc When merging items, also merge their citation keys into an bib(la)tex `ids` field.

preference(name="extensions.zotero.translators.better-bibtex.postscriptOverride" bbt:affects="" type="string" default="")
bbt:doc.
  You can use a custom postscript per export directory:

  1. Edit the hidden preference `postscriptOverride`, and set it to a filename like `postscript.js`
  2. In the directory where you intend to export to, create a file called `postscript.js` (or whatever you set the preference to) and add the postscript you want there
  3. Export to that directory.

  A postscript override will disable caching for that export.

preference(name="extensions.zotero.translators.better-bibtex.preferencesOverride" bbt:affects="" type="string" default="")
bbt:doc.
  You can use custom preferences per export directory:

  1. Edit the hidden preference `preferencesOverride`, and set it to a filename like `preferences.json`
  2. In the directory where you intend to export to, create a file called `preferences.json` (or whatever you set the preference to), or called `[bibfile you are exporting to].json` and add the desired preference overrides in the format `{"override": "preferences": {"skipFields": "note"}}`. You can get your current preferences by exporting to `BetterBibTeX JSON` and removing everything except config.`preferences`, and renaming `config` to `override`.
  3. Export to that directory.

  A preferences override will disable caching for that export.

preference(name="extensions.zotero.translators.better-bibtex.stringsOverride" bbt:affects="" type="string" default="")
bbt:doc.
  You can use a custom @string list per export directory:

  1. Edit the hidden preference `stringstOverride`, and set it to a filename like `strings.bib`
  2. In the directory where you intend to export to, create a file called `strings.bib` (or whatever you set the preference to) and add the @string declarations you want there
  3. Export to that directory.

  A strings override will disable caching for that export.

preference#pref-better-bibtex-kuroshiro(name="extensions.zotero.translators.better-bibtex.kuroshiro" bbt:affects="" type="bool" default="false")
bbt:doc When on, BBT will load kuroshiro for romajization in citation keys. This uses a lot of memory, easily 100MB. If you don't have Japanese titles/names, keep this off.

preference#pref-better-bibtex-jieba(name="extensions.zotero.translators.better-bibtex.jieba" bbt:affects="" type="bool" default="false")
bbt:doc When on, BBT will make Chinese word segmentation available for citation keys construction. This uses a lot of memory, easily 70MB. If you don't have Chinese titles/names, keep this off.

preference(name="extensions.zotero.translators.better-bibtex.relativeFilePaths" bbt:affects="tex" type="bool" default="false")
bbt:doc.
  When exporting a Bib(La)TeX file, if the attachments are stored anywhere under the directory the bibliography is exported to, use relative paths
  to those attachments. Caching is disabled when this option is on, so it affects performance.

preference(name="extensions.zotero.translators.better-bibtex.git" bbt:affects="" type="string" default="config")
bbt:doc Can be `off`, `config` or `always`

preference#pref-better-bibtex-mapUnicode(name="extensions.zotero.translators.better-bibtex.mapUnicode" bbt:affects="tex" type="string" default="conservative")
bbt:doc.
  When a unicode character can be exported as either a math-mode or text-mode command, map to:

  * `minimal-packages`: if both a math-mode and a text-mode mapping is available, use the version that does not require extra packages to be loaded.
  * `conservative`: if both a math-mode and a text-mode mapping is available, stay in the mode of the previously mapped character if possible. This minimizes the number of generated `$`s in the output.
  * `text`: if both a math-mode and a text-mode mapping is available, prefer text.
  * `math`: if both a math-mode and a text-mode mapping is available, prefer math.

preference(name="extensions.zotero.translators.better-bibtex.mapText" bbt:affects="tex" type="string" default="")
bbt:doc.
  Any characters entered here will prefer a text-mode LaTeX-command counterpart over a math-mode, if a text-mode command is available.
  Only useful when `mapUnicode` is `conservative`. Characters specified in `mapMath` take presedence over characters specified in `mapText`.

preference(name="extensions.zotero.translators.better-bibtex.mapMath" bbt:affects="tex" type="string" default="")
bbt:doc.
  Any characters entered here will prefer a math-mode LaTeX-command counterpart over a math-mode,
  if a math-mode command is available. Only useful when `mapUnicode` is `conservative`.

preference#pref-better-bibtex-workers(name="extensions.zotero.translators.better-bibtex.workers" bbt:affects="" type="int" default="1")
bbt:doc.
  BBT can now perform its exports in a separate thread, and
  should no longer block Zotero's UI pretty much regardless
  of how large your library is. The default of 1 parallel
  export should suit most needs, but if you have many
  auto-exports set up, you may want to raise the maximum
  parallel exports to prevent queueing of exports. It is
  possible to turn background exports off by setting this
  value to `0` in the hidden preferences; you will get the
  old (blocking) behavior back, but you can't complain about
  Zotero being laggy during auto-exports. All Zotero exports
  are blocking, and it's a minor miracle I got background
  exports to work at all.

preference#pref-better-bibtex-cache(name="extensions.zotero.translators.better-bibtex.cache" bbt:affects="*" type="bool" default="true")
bbt:doc.
  Even though BBT exports happen in a separate thread, some
  work needs to be done before the background export can
  start. Part of this work is preloading the cache. You can
  shorten the (blocking) preparation time by turning off
  the cache, at the cost of longer export times.

preference(name="extensions.zotero.translators.better-bibtex.separatorList" bbt:affects="tex" type="string" default="and")
bbt:doc.
  Separator between list elements in list-type fields. You will need to add `--listsep='|'` to your biber calls.
preference(name="extensions.zotero.translators.better-bibtex.separatorNames" bbt:affects="tex" type="string" default="and")
bbt:doc.
  Separator between author names. You will need to add `--namesep='|'` to your biber calls.

preference(name="extensions.zotero.translators.better-bibtex.charmap" bbt:affects="tex" type="string" default="")
bbt:doc.
  a JSON mapping from single character to raw LaTeX, to augment the default mapping; these will be applied when you export as ASCII. **DO NOT** edit this preferencedirectly,
  but create a CSV (not semicolons) file named `charmap.csv` in the zotero data directory under the `better-bibtex` folder with columns `unicode` (the source character),
  `text` (representation in LaTeX text mode, if any) and `math` (representation in LaTeX math mode, if any, without dollar signs).

// documented in tooltip
preference#pref-better-bibtex-retainCache(name="extensions.zotero.translators.better-bibtex.retainCache" bbt:affects="" type="bool" default="false")
preference#pref-better-bibtex-exportTitleCase(name="extensions.zotero.translators.better-bibtex.exportTitleCase" bbt:affects="tex" type="bool" default="true")
preference#pref-better-bibtex-importCaseProtection(name="extensions.zotero.translators.better-bibtex.importCaseProtection" bbt:affects="" type="string" default="as-needed")
preference#pref-better-bibtex-bibtexURL(name="extensions.zotero.translators.better-bibtex.bibtexURL" bbt:affects="bibtex" type="string" default="off")
preference#pref-better-bibtex-jabrefFormat(name="extensions.zotero.translators.better-bibtex.jabrefFormat" bbt:affects="tex" type="int" default="0")
preference#pref-better-bibtex-biblatexExtractEprint(name="extensions.zotero.translators.better-bibtex.biblatexExtractEprint" bbt:affects="tex" type="bool" default="true")
preference#pref-better-bibtex-exportBraceProtection(name="extensions.zotero.translators.better-bibtex.exportBraceProtection" bbt:affects="tex" type="bool" default="true")
preference#pref-better-bibtex-importSentenceCase(name="extensions.zotero.translators.better-bibtex.importSentenceCase" bbt:affects="" type="string" default="on+guess")

// hidden preferences
preference(name="extensions.zotero.translators.better-bibtex.importJabRefStrings" bbt:affects="" type="bool" default="true")
preference(name="extensions.zotero.translators.better-bibtex.importJabRefAbbreviations" bbt:affects="" type="bool" default="true")
preference(name="extensions.zotero.translators.better-bibtex.autoExportPathReplaceDirSep" bbt:affects="" type="string" default="-")
preference(name="extensions.zotero.translators.better-bibtex.autoExportPathReplaceSpace" bbt:affects="" type="string" default=" ")
preference(name="extensions.zotero.translators.better-bibtex.autoExportPathReplaceDiacritics" bbt:affects="" type="bool" default="false")
preference(name="extensions.zotero.translators.better-bibtex.baseAttachmentPath" bbt:affects="*" type="string" default="")

// mainly for testing
preference(name="extensions.zotero.translators.better-bibtex.scrubDatabase" bbt:affects="" type="bool" default="false")
preference(name="extensions.zotero.translators.better-bibtex.testing" bbt:affects="" type="bool" default="false")

// smuggle data into translator
preference(name="extensions.zotero.translators.better-bibtex.platform" bbt:affects="" type="string" default="")
